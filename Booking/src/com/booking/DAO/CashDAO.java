package com.booking.DAO;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.InputMismatchException;
import java.util.Random;

import com.booking.member.User;
import com.dbutil.DBUtil;

public class CashDAO {
    static UserDAO userDAO;
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    // ьўёЖИѕ ВХЕВаё
    public void chargeCash(String ID, int cash, BufferedReader br) {
        Connection conn = null;
        PreparedStatement pstmtU = null;
        String sqlU = null;

        try {
            conn = DBUtil.getConnection();
            sqlU = "UPDATE \"USER\" SET CASH = CASH + ? WHERE USER_ID=?";
            pstmtU = conn.prepareStatement(sqlU);
            pstmtU.setInt(1, cash);
            pstmtU.setString(2, ID);
            int update = pstmtU.executeUpdate();

            if (update == 1) {
                conn.commit();
                System.out.println("ВХЕВаё Вё▒Ж│х !");
            } else {
                conn.rollback();
                System.err.println("ВХЕВаё ВІцьїе !");
            }
        } catch (NumberFormatException | InputMismatchException | ClassNotFoundException | SQLException e1) {
            e1.printStackTrace();
            System.err.println("Рџа ВѕФВъљвДї ВъЁваЦьЋўВёИВџћ.");
        } finally {
            DBUtil.executeClose(null, pstmtU, conn);
        }
    }

    // ВѓгВџЕВъљ в│┤Вюа ЖИѕВЋА ВА░ьџї
    public void showCash(String ID) {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        String sql = "SELECT USER_ID, CASH FROM \"USER\" WHERE USER_ID=?";

        try {
            conn = DBUtil.getConnection();
            pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, ID);
            rs = pstmt.executeQuery();

            if (rs.next()) {
                System.out.println("============================================================");
                System.out.println("­ЪЉц ВѓгВџЕВъљ ID : " + rs.getString("USER_ID"));
                System.out.println("­Ъњ░ в│┤Вюа ЖИѕВЋА : " + rs.getInt("CASH") + "ВЏљ");
                System.out.println("============================================================");
            } else {
                System.err.println("Рџа ВѓгВџЕВъљ ВаЋв│┤вЦ╝ В░ЙВЮё Вѕў ВЌєВіхвІѕвІц.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            DBUtil.executeClose(rs, pstmt, conn);
        }
    }

    // ВѓгВџЕВъљ ьЈгВЮИьіИ ВА░ьџї
    public int showPoint(String ID) {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        int point = -1;

        try {
            conn = DBUtil.getConnection();
            pstmt = conn.prepareStatement("SELECT POINT FROM \"USER\" WHERE USER_ID=?");
            pstmt.setString(1, ID);
            rs = pstmt.executeQuery();

            if (rs.next()) {
                point = rs.getInt("POINT");
                System.out.println("============================================================");
                System.out.println("ВѓгВџЕВъљ ID : " + ID);
                System.out.println("в│┤Вюа ьЈгВЮИьіИ : " + point + "Ваљ");
                System.out.println("============================================================");
            } else {
                System.err.println("ВѓгВџЕВъљ ВаЋв│┤вЦ╝ В░ЙВЮё Вѕў ВЌєВіхвІѕвІц.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            DBUtil.executeClose(rs, pstmt, conn);
        }
        return point;
    }

    // ьЈгВЮИьіИ ВаЂвдй
    public void updatePoint(String ID) {
        Connection conn = null;
        PreparedStatement pstmtU = null;

        try {
            int point = new Random().nextInt(1501) + 500;
            conn = DBUtil.getConnection();
            String sqlU = "UPDATE \"USER\" SET POINT = POINT + ? WHERE USER_ID=?";
            pstmtU = conn.prepareStatement(sqlU);
            pstmtU.setInt(1, point);
            pstmtU.setString(2, ID);
            int update = pstmtU.executeUpdate();

            if (update == 1) {
                conn.commit();
                System.out.println(point + " ьЈгВЮИьіИ ВаЂвдй Вё▒Ж│х!");
            } else {
                conn.rollback();
                System.err.println("ьЈгВЮИьіИ ВаЂвдй ВІцьїе!");
            }
        } catch (Exception e1) {
            e1.printStackTrace();
        } finally {
            DBUtil.executeClose(null, pstmtU, conn);
        }
    }

    // ьЈгВЮИьіИ ВѓгВџЕ
    public void usePoint(String ID, int point) {
        Connection conn = null;
        PreparedStatement pstmtU = null;

        try {
            conn = DBUtil.getConnection();
            String sqlU = "UPDATE \"USER\" SET POINT = POINT - ? WHERE USER_ID=?";
            pstmtU = conn.prepareStatement(sqlU);
            pstmtU.setInt(1, point);
            pstmtU.setString(2, ID);
            int update = pstmtU.executeUpdate();

            if (update == 1) {
                conn.commit();
                System.out.println(point + " ьЈгВЮИьіИ ВѓгВџЕ ВЎёвБї!");
            } else {
                conn.rollback();
                System.err.println("ьЈгВЮИьіИ ВѓгВџЕ ВІцьїе!");
            }
        } catch (Exception e1) {
            e1.printStackTrace();
        } finally {
            DBUtil.executeClose(null, pstmtU, conn);
        }
    }

    // ьўёЖИѕ ВѓгВџЕ
    public void useCash(String ID, int cash) {
        Connection conn = null;
        PreparedStatement pstmtU = null;

        try {
            conn = DBUtil.getConnection();
            String sqlU = "UPDATE \"USER\" SET CASH = CASH - ? WHERE USER_ID=?";
            pstmtU = conn.prepareStatement(sqlU);
            pstmtU.setInt(1, cash);
            pstmtU.setString(2, ID);
            int update = pstmtU.executeUpdate();

            if (update == 1) {
                conn.commit();
                System.out.println(cash + "ВЏљ Ж▓░Ваю ВЎёвБї!");
                System.out.println("\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРБђРБђРАђРађРађРађРађРађРађРађРађРађРађРађРБђРАђРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРБаРаіРаЂРађРађРаЅРБЅРАЅРа▓РБёРАаРаћРањРаЅРаѕРаЅРађРађРаЅРаЅРаљРа▓РадРбёРБђРАаРацРацРаќРаіРаЅРаЉРа▓РбёРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаБРа┤РаќРаЏРаЅРаЅРаЅРАЕРб┐РБЅРБаРађРађРађРађРађРађРађРађРађРађРађРађРађРБ│РАХРБХРбдРБцРБцРБцРБцРБђРАђРб▒РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРА░РадРАђРађРАаРаіРбаРБцРАђРађРађРађРађРађРађРађРађРађРађРаўРањРањРбЏРБЦРАђРаўРбєРађРбђРаќРбєРаЅРаЅРаЂРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРб░РаЃРАаРаЌРА░РаЃРађРаѕРаЅРађРађРађРбђРБцРБцРБцРБцРБцРАёРађРађРађРађРаўРаЏРаЂРађРаўРАєРаѕРбцРаўРАёРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаЈРађРАЄРб░РАЂРађРађРађРађРађРађРађРаѕРаЅРаЅРаІРаЅРбЅРАЅРађРађРађРађРађРађРађРађРађРАўРађРбИРађРб╣РАђРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбИРађРађРАЄРађРБДРБёРБђРађРађРађРађРађРађРБ┤РБХРБЙРБ┐РБ┐РаЄРађРађРађРађРађРађРБцРаќРаџРацРБђРа╝РађРађРАЄРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаИРађРађРаѕРаЂРађРађРаѕРа│РАёРађРађРађРађРа╣РБ┐РБ┐РБ┐РаЈРађРађРађРађРбђРБаРАъРаЂРађРађРађРађРађРађРАаРаѓРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаѕРађРбёРађРађРађРађРађРађРаЏРа▓РбдРБцРБ┤РБцРБ┐РБ┐РБ┐РБХРАХРаХРаЙРаЏРаЅРаЂРађРађРађРађРађРБђРаёРаіРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаѓРбцРБцРБђРАђРађРађРађРађРаѕРаЅРаЅРаЅРаЅРаЂРађРађРађРађРађРађРбаРБ┤РАХРаъРаІРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаЅРаЏРб┐РАЄРађРађРађРађРађРбаРАЄРађРађРађРађРађРађРађРађРбИРаІРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаЄРађРађРађРађРађРаўРаЄРађРађРађРађРађРађРађРађРАўРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаѕРабРАёРбХРБцРА┤РаќРађРаХРБХРБцРБХРАХРаЏРаЂРбаРаЄРађРАђРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаИРАђРађРађРађРбђРађРађРађРађРађРађРбђРаІРађРаИРАїРббРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбЃРађРа▓РаќРб║РаљРБџРаЃРађРађРбаРаЄРађРађРађРаЄРбИРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаѕРађРаЎРаІРбИРаЃРаЅРаЂРађРађРбИРађРађРађРАцРбБРаЈРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРБаРаЃРађРађРађРађРађРађРађРађРађРбИРБ┤РАХРа┐РаЏРаЂРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРб░РаЂРбђРБђРБаРБцРБцРБёРБђРБђРађРађРађРбДРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбаРаЃРбђРБЙРБ┐Ра┐РаЏРаЅРаЅРаЎРа╗Рб┐РБХРАєРбИРАђРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбЙРАЙРаЏРаЂРађРађРађРађРађРађРађРађРаЅРа╗РБёРАЄРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаЅРаЂРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ\r\n"
                		+ "");
            } else {
                conn.rollback();
                System.err.println("ВЏљьЎћ ВѓгВџЕ ВІцьїе!");
            }
        } catch (Exception e1) {
            e1.printStackTrace();
        } finally {
            DBUtil.executeClose(null, pstmtU, conn);
        }
    }

    // Ж▓░Ваю ВЌгвХђ ьЎЋВЮИ
    public boolean checkPay(int reservation_ID) {
        Connection conn = null;
        PreparedStatement pstmtS = null;
        ResultSet rs = null;

        try {
            conn = DBUtil.getConnection();
            String sql = "SELECT RESERVATION_ID FROM PAYMENT WHERE RESERVATION_ID=?";
            pstmtS = conn.prepareStatement(sql);
            pstmtS.setInt(1, reservation_ID);
            rs = pstmtS.executeQuery();

            if (rs.next()) {
                System.out.println(" Ж▓░Ваю ВЎёвБївљю ВўѕВЋйВъЁвІѕвІц.");
                return true;
            } else {
                System.out.println(" в»ИЖ▓░Ваю ВўѕВЋйВъЁвІѕвІц.");
                return false;
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            DBUtil.executeClose(rs, pstmtS, conn);
        }
        return false;
    }
}

